#include <iostream>

// 190. Reverse Bits
class Solution {
 public:
  uint32_t reverseBits(uint32_t n) {
    if (n == 0 || n == 0b11111111111111111111111111111111) return n;
    uint32_t res = 0;
    int i = 32;
    while(n) {
      uint32_t last = n & 1;
      last <<= --i;
      res |= last;
      n >>= 1;
    }
    return res;
  }
};

void test(uint32_t n, uint32_t expected) {
  Solution sol;
  uint32_t res = sol.reverseBits(n);
  if (res != expected) {
    std::cerr << "ERROR: res: " << res << ", expected: " << expected
              << std::endl;
  }
}

int main() {
  test(0b00000000000000000000000000000001, 0b10000000000000000000000000000000);
  test(0b00000000000000000000000000000010, 0b01000000000000000000000000000000);
  test(0b00000000000000000000000000000011, 0b11000000000000000000000000000000);
  test(0b00000000000000000000000000000100, 0b00100000000000000000000000000000);

  test(0b10000000000000000000000000000000, 0b00000000000000000000000000000001);
  test(0b11000000000000000000000000000000, 0b00000000000000000000000000000011);
  test(0b00100000000000000000000000000000, 0b00000000000000000000000000000100);
  test(0b11111111111111111111111111111111, 0b11111111111111111111111111111111);
  test(0b11111111111111111111111111110111, 0b11101111111111111111111111111111);
}
